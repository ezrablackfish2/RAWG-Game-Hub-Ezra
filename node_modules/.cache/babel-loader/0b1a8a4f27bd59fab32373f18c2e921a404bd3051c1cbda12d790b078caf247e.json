{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nfunction GameFetch(apiData) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [gameDetail, fetchGame] = useState([]);\n  console.log(\"hi\");\n  function GameCollector(apiData) {\n    _s();\n    useEffect(() => {\n      const controller = new AbortController();\n      const Fetcher = id => {\n        console.log(id);\n        const x = async () => {\n          try {\n            console.log(id);\n            const result = await fetch(`http://127.0.0.1:8000/${id}`, {\n              signal: controller.signal\n            });\n            const finale = await result.json();\n            console.log(finale);\n            fetchGame(finale);\n          } catch (err) {\n            console.log(\"could not fetch ezra\");\n          }\n        };\n        x();\n      };\n      apiData.map(game => {\n        Fetcher(game.id);\n      });\n      return () => controller.abort();\n    }, []);\n    return gameDetail;\n  }\n  _s(GameCollector, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  ;\n  let data = GameCollector(apiData);\n  return data;\n}\n_s2(GameFetch, \"Y41sOn0itBFjJ+rmS/pvJmbvM58=\");\n_c = GameFetch;\n;\nexport default GameFetch;\nvar _c;\n$RefreshReg$(_c, \"GameFetch\");","map":{"version":3,"names":["useEffect","useState","GameFetch","apiData","_s2","_s","$RefreshSig$","gameDetail","fetchGame","console","log","GameCollector","controller","AbortController","Fetcher","id","x","result","fetch","signal","finale","json","err","map","game","abort","data","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/game-hub/src/services/gameFetch.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction GameFetch(apiData) {\n\tconst [gameDetail, fetchGame] = useState([])\n\tconsole.log(\"hi\");\nfunction GameCollector(apiData) {\n\tuseEffect(() => {\n\tconst controller = new AbortController();\n\tconst Fetcher = (id) => {\n\t\tconsole.log(id);\n\t\tconst x = async() => {\n\t\t\ttry {\n\t\t\tconsole.log(id);\n\t\t\tconst result = await fetch(`http://127.0.0.1:8000/${id}`, { signal: controller.signal });\n\t\t\tconst finale = await result.json();\n\t               \tconsole.log(finale);\n\t\t\tfetchGame(finale);\n\t\t\t}\n\t\t\tcatch(err) {\n\t\t\t\tconsole.log(\"could not fetch ezra\");\n\t\t\t}\n\t};\n\n\t\tx();\n\t\t};\n\t\tapiData.map(game => {Fetcher(game.id)});\n\t\treturn() => controller.abort();\n\t}, [])\n\treturn (gameDetail);\n\t};\n\n\tlet data = GameCollector(apiData);\n\treturn(data);\n};\n\nexport default GameFetch;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,SAASA,CAACC,OAAO,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5CQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAClB,SAASC,aAAaA,CAACR,OAAO,EAAE;IAAAE,EAAA;IAC/BL,SAAS,CAAC,MAAM;MAChB,MAAMY,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MACxC,MAAMC,OAAO,GAAIC,EAAE,IAAK;QACvBN,OAAO,CAACC,GAAG,CAACK,EAAE,CAAC;QACf,MAAMC,CAAC,GAAG,MAAAA,CAAA,KAAW;UACpB,IAAI;YACJP,OAAO,CAACC,GAAG,CAACK,EAAE,CAAC;YACf,MAAME,MAAM,GAAG,MAAMC,KAAK,CAAE,yBAAwBH,EAAG,EAAC,EAAE;cAAEI,MAAM,EAAEP,UAAU,CAACO;YAAO,CAAC,CAAC;YACxF,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,CAAC;YACpBZ,OAAO,CAACC,GAAG,CAACU,MAAM,CAAC;YACjCZ,SAAS,CAACY,MAAM,CAAC;UACjB,CAAC,CACD,OAAME,GAAG,EAAE;YACVb,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACpC;QACF,CAAC;QAEAM,CAAC,CAAC,CAAC;MACH,CAAC;MACDb,OAAO,CAACoB,GAAG,CAACC,IAAI,IAAI;QAACV,OAAO,CAACU,IAAI,CAACT,EAAE,CAAC;MAAA,CAAC,CAAC;MACvC,OAAM,MAAMH,UAAU,CAACa,KAAK,CAAC,CAAC;IAC/B,CAAC,EAAE,EAAE,CAAC;IACN,OAAQlB,UAAU;EAClB;EAACF,EAAA,CAxBOM,aAAa;EAwBpB;EAED,IAAIe,IAAI,GAAGf,aAAa,CAACR,OAAO,CAAC;EACjC,OAAOuB,IAAI;AACZ;AAACtB,GAAA,CA/BQF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA+BjB;AAED,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}