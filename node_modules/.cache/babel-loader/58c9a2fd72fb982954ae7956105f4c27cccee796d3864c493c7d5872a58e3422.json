{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Documents/game-hub/src/components/GameGrid.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"../App.module.css\";\nimport React, { useState } from \"react\";\nimport apiClient from \"../services/api-client-axios.js\";\nimport { useEffect } from \"react\";\nimport spinner from \"../assets/loadingAnimation.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameGrid() {\n  _s();\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    apiClient.get(\"\").then(res => setGames(res.data)).catch(err => setError(err.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: styles.games,\n      children: [\" \", error, \" \", isLoading && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: spinner,\n        className: styles.load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 54\n      }, this), \"  \", games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.gamelists,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.oneGame,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.gameCover,\n              src: game.cover\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.gameTitle,\n            children: [game.title, /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: game.platform.map(platform => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: platform.platform\n              }, platform.platform, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this)\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n_s(GameGrid, \"vO6mfEsOd0naXGtwD6QrGwKFtos=\");\n_c = GameGrid;\n;\nexport default GameGrid;\nvar _c;\n$RefreshReg$(_c, \"GameGrid\");","map":{"version":3,"names":["styles","React","useState","apiClient","useEffect","spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","GameGrid","_s","games","setGames","error","setError","isLoading","setLoading","get","then","res","data","catch","err","message","children","className","src","load","fileName","_jsxFileName","lineNumber","columnNumber","map","game","gamelists","oneGame","gameCover","cover","gameTitle","title","platform","id","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/game-hub/src/components/GameGrid.jsx"],"sourcesContent":["import styles from \"../App.module.css\";\nimport React, { useState } from \"react\";\nimport apiClient from \"../services/api-client-axios.js\";\nimport { useEffect } from \"react\";\nimport spinner from \"../assets/loadingAnimation.gif\";\n\ninterface Game {\n\tid: number;\n\tname: string;\n\tcover: string;\n}\ninterface FetchGamesResponse {\n\tcount: number;\n\tresults:Game[];\n}\nfunction GameGrid() {\n\tconst [games, setGames ] = useState([]);\n\tconst [error, setError] = useState(\"\");\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tapiClient.get(\"\")\n\t\t\t.then(res =>  setGames(res.data))\n\t\t\t.catch(err => setError(err.message));\n\t}, [])\n\nreturn (\n\t<>\n\t<ol className={styles.games}> {error} {isLoading && <img src={spinner} className={styles.load} />}  {games.map(game => (\n                  <li key={game.id} className={styles.gamelists}>\n                  <div className={styles.oneGame}>\n                  <div><img className={styles.gameCover}src={game.cover} /></div>\n                  <div className={styles.gameTitle}>{game.title} \n\t\t<ul>\n\t\t{game.platform.map(platform => (<li key={platform.platform}>{platform.platform}</li>))}\n\t\t</ul>\n\t\t</div>\n                  </div>\n                  </li>))}\n        </ol>\n\t</>\n);\n};\n\nexport default GameGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}