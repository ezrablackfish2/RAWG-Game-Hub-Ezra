{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Documents/game-hub/src/components/GameGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport apiClient from \"../services/api-client-axios.js\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameGrid() {\n  _s();\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    apiClient.get < FetchGamesResponse > \"\".then(res => setGames(res.data.results)).catch(err => setError(err.message));\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: game.title\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 2\n  }, this);\n}\n_s(GameGrid, \"CNU3diSDswws30EOY517ur6hLyA=\");\n_c = GameGrid;\n;\nexport default GameGrid;\nvar _c;\n$RefreshReg$(_c, \"GameGrid\");","map":{"version":3,"names":["React","useState","apiClient","useEffect","jsxDEV","_jsxDEV","GameGrid","_s","games","setGames","error","setError","get","FetchGamesResponse","then","res","data","results","catch","err","message","children","map","game","title","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/game-hub/src/components/GameGrid.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport apiClient from \"../services/api-client-axios.js\";\nimport { useEffect } from \"react\";\n\ninterface Game {\n\tid: number;\n\tname: string;\n\tcover: string;\n}\ninterface FetchGamesResponse {\n\tcount: number;\n\tresults:Game[];\n}\nfunction GameGrid() {\n\tconst [games, setGames ] = useState([]);\n\tconst [error, setError] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tapiClient.get<FetchGamesResponse>(\"\")\n\t\t.then(res =>  setGames(res.data.results))\n\t\t.catch(err => setError(err.message));\n\t})\n\nreturn (\n\t<ul>\n\t{games.map(game => <li key={game.id}>{game.title}</li>)}\n\t</ul>\n);\n};\n\nexport default GameGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,iCAAiC;AACvD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWlC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCE,SAAS,CAAC,MAAM;IACfD,SAAS,CAACU,GAAG,GAACC,kBAAkB,GAAE,EAAE,CACnCC,IAAI,CAACC,GAAG,IAAKN,QAAQ,CAACM,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CACxCC,KAAK,CAACC,GAAG,IAAIR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC,CAAC;EACrC,CAAC,CAAC;EAEH,oBACCf,OAAA;IAAAgB,QAAA,EACCb,KAAK,CAACc,GAAG,CAACC,IAAI,iBAAIlB,OAAA;MAAAgB,QAAA,EAAmBE,IAAI,CAACC;IAAK,GAApBD,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEN;AAACtB,EAAA,CAfQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAehB;AAED,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}