{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nfunction GameFetch(apiData) {\n  _s();\n  const [gameDetail, fetchGame] = useState([]);\n  console.log(\"hi\");\n  function GameCollector(apiData) {\n    const Fetcher = id => {\n      console.log(id);\n      const x = async () => {\n        try {\n          console.log(id);\n          const result = await fetch(`http://127.0.0.1:8000/${id}`, {\n            signal: controller.signal\n          });\n          const finale = await result.json();\n          console.log(finale);\n          fetchGame(finale);\n        } catch (err) {\n          console.log(\"could not fetch ezra\");\n        }\n      };\n      x();\n    };\n    apiData.map(game => {\n      Fetcher(game.id);\n    });\n    return gameDetail;\n  }\n  ;\n  let data = GameCollector(apiData);\n  return data;\n}\n_s(GameFetch, \"Y41sOn0itBFjJ+rmS/pvJmbvM58=\");\n_c = GameFetch;\n;\nexport default GameFetch;\nvar _c;\n$RefreshReg$(_c, \"GameFetch\");","map":{"version":3,"names":["useEffect","useState","GameFetch","apiData","_s","gameDetail","fetchGame","console","log","GameCollector","Fetcher","id","x","result","fetch","signal","controller","finale","json","err","map","game","data","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/game-hub/src/services/gameFetch.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction GameFetch(apiData) {\n\tconst [gameDetail, fetchGame] = useState([])\n\tconsole.log(\"hi\");\nfunction GameCollector(apiData) {\n\tconst Fetcher = (id) => {\n\t\tconsole.log(id);\n\t\tconst x = async() => {\n\t\t\ttry {\n\t\t\tconsole.log(id);\n\t\t\tconst result = await fetch(`http://127.0.0.1:8000/${id}`, { signal: controller.signal });\n\t\t\tconst finale = await result.json();\n\t               \tconsole.log(finale);\n\t\t\tfetchGame(finale);\n\t\t\t}\n\t\t\tcatch(err) {\n\t\t\t\tconsole.log(\"could not fetch ezra\");\n\t\t\t}\n\t};\n\n\t\tx();\n\t\t};\n\t\tapiData.map(game => {Fetcher(game.id)});\n\treturn (gameDetail);\n\t};\n\n\tlet data = GameCollector(apiData);\n\treturn(data);\n};\n\nexport default GameFetch;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,SAASA,CAACC,OAAO,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5CM,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAClB,SAASC,aAAaA,CAACN,OAAO,EAAE;IAC/B,MAAMO,OAAO,GAAIC,EAAE,IAAK;MACvBJ,OAAO,CAACC,GAAG,CAACG,EAAE,CAAC;MACf,MAAMC,CAAC,GAAG,MAAAA,CAAA,KAAW;QACpB,IAAI;UACJL,OAAO,CAACC,GAAG,CAACG,EAAE,CAAC;UACf,MAAME,MAAM,GAAG,MAAMC,KAAK,CAAE,yBAAwBH,EAAG,EAAC,EAAE;YAAEI,MAAM,EAAEC,UAAU,CAACD;UAAO,CAAC,CAAC;UACxF,MAAME,MAAM,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,CAAC;UACpBX,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;UACjCX,SAAS,CAACW,MAAM,CAAC;QACjB,CAAC,CACD,OAAME,GAAG,EAAE;UACVZ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACpC;MACF,CAAC;MAEAI,CAAC,CAAC,CAAC;IACH,CAAC;IACDT,OAAO,CAACiB,GAAG,CAACC,IAAI,IAAI;MAACX,OAAO,CAACW,IAAI,CAACV,EAAE,CAAC;IAAA,CAAC,CAAC;IACxC,OAAQN,UAAU;EAClB;EAAC;EAED,IAAIiB,IAAI,GAAGb,aAAa,CAACN,OAAO,CAAC;EACjC,OAAOmB,IAAI;AACZ;AAAClB,EAAA,CA3BQF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA2BjB;AAED,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}