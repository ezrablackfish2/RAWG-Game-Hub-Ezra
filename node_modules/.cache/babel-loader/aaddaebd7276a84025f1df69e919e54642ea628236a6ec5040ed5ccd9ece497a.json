{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nfunction GameFetch(apiData) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [gameDetail, fetchGame] = useState([]);\n  console.log(\"hi\");\n  function GameCollector(apiData) {\n    _s();\n    useEffect(apiData => {\n      const Fetcher = id => {\n        console.log(id);\n        const x = async () => {\n          console.log(id);\n          const result = await fetch(`http://127.0.0.1:8000/${id}`);\n          const finale = await result.json();\n          console.log(finale);\n          fetchGame(finale);\n        };\n        x();\n      };\n      apiData.map(game => {\n        Fetcher(game.id);\n      });\n      return () => console.log(\"disconnecting\");\n    }, [], [], [], [], []);\n    return gameDetail;\n  }\n  _s(GameCollector, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  ;\n  let data = GameCollector(apiData);\n  return data;\n}\n_s2(GameFetch, \"Y41sOn0itBFjJ+rmS/pvJmbvM58=\");\n_c = GameFetch;\n;\nexport default GameFetch;\nvar _c;\n$RefreshReg$(_c, \"GameFetch\");","map":{"version":3,"names":["useEffect","useState","GameFetch","apiData","_s2","_s","$RefreshSig$","gameDetail","fetchGame","console","log","GameCollector","Fetcher","id","x","result","fetch","finale","json","map","game","data","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/game-hub/src/services/gameFetch.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction GameFetch(apiData) {\n\tconst [gameDetail, fetchGame] = useState([])\n\tconsole.log(\"hi\");\nfunction GameCollector(apiData) {\n\tuseEffect((apiData) => {\n\tconst Fetcher = (id) => {\n\t\tconsole.log(id);\n\t\tconst x = async() => {\n\t\tconsole.log(id);\n\t\tconst result = await fetch(`http://127.0.0.1:8000/${id}`);\n\t\tconst finale = await result.json();\n               \tconsole.log(finale);\n\t\tfetchGame(finale);\n\t};\n\n\t\tx();\n\t\t};\n\t\tapiData.map(game => {Fetcher(game.id)});\n\t\treturn() => console.log(\"disconnecting\");\n\t}, [], [], [] , [] , [])\n\treturn (gameDetail);\n\t};\n\n\tlet data = GameCollector(apiData);\n\treturn(data);\n};\n\nexport default GameFetch;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,SAASA,CAACC,OAAO,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5CQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAClB,SAASC,aAAaA,CAACR,OAAO,EAAE;IAAAE,EAAA;IAC/BL,SAAS,CAAEG,OAAO,IAAK;MACvB,MAAMS,OAAO,GAAIC,EAAE,IAAK;QACvBJ,OAAO,CAACC,GAAG,CAACG,EAAE,CAAC;QACf,MAAMC,CAAC,GAAG,MAAAA,CAAA,KAAW;UACrBL,OAAO,CAACC,GAAG,CAACG,EAAE,CAAC;UACf,MAAME,MAAM,GAAG,MAAMC,KAAK,CAAE,yBAAwBH,EAAG,EAAC,CAAC;UACzD,MAAMI,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;UACpBT,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;UACjCT,SAAS,CAACS,MAAM,CAAC;QAClB,CAAC;QAEAH,CAAC,CAAC,CAAC;MACH,CAAC;MACDX,OAAO,CAACgB,GAAG,CAACC,IAAI,IAAI;QAACR,OAAO,CAACQ,IAAI,CAACP,EAAE,CAAC;MAAA,CAAC,CAAC;MACvC,OAAM,MAAMJ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IACzC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAG,EAAE,CAAC;IACxB,OAAQH,UAAU;EAClB;EAACF,EAAA,CAlBOM,aAAa;EAkBpB;EAED,IAAIU,IAAI,GAAGV,aAAa,CAACR,OAAO,CAAC;EACjC,OAAOkB,IAAI;AACZ;AAACjB,GAAA,CAzBQF,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAyBjB;AAED,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}