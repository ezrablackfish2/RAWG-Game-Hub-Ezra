{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Documents/game-hub/src/App.js\",\n  _s = $RefreshSig$();\nimport styles from \"./App.module.css\";\nimport NavBar from \"./components/NavBar.jsx\";\nimport { useState } from \"react\";\nimport on from \"./assets/thumbs_up.gif\";\nimport off from \"./assets/thumbs_down.png\";\nimport ApiClient from \"./services/api-client.js\";\nimport colorMode from \"./components/colorMode.jsx\";\nimport ColorModeSwitch from \"./components/colorModeSwitch\";\nimport spinner from \"./assets/loadingAnimation.gif\";\nimport GameFetch from \"./services/gameFetch.jsx\";\nimport { useEffect } from \"react\";\nimport ApiClient2 from \"./services/api-client2.js\";\nimport GameGrid from \"./components/GameGrid.jsx\";\nimport GenreList from \"./components/GenreList.jsx\";\nimport PlatformSelector from \"./components/PlatformSelector.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(true);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: colorMode(mode),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nav,\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.searchWord,\n          children: \"Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ColorModeSwitch, {\n          mode: mode,\n          setMode: setMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.aside,\n        children: /*#__PURE__*/_jsxDEV(GenreList, {\n          onSelectGenre: genre => setSelectedGenre(genre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(PlatformSelector, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            selectedGenre: selectedGenre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"JzIl6CZer7I/B1+c93sgg5ho9d8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","NavBar","useState","on","off","ApiClient","colorMode","ColorModeSwitch","spinner","GameFetch","useEffect","ApiClient2","GameGrid","GenreList","PlatformSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","selectedGenre","setSelectedGenre","children","className","nav","fileName","_jsxFileName","lineNumber","columnNumber","searchWord","aside","onSelectGenre","genre","main","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/game-hub/src/App.js"],"sourcesContent":["import styles from \"./App.module.css\";\nimport NavBar from \"./components/NavBar.jsx\";\nimport { useState } from \"react\";\nimport on from \"./assets/thumbs_up.gif\";\nimport off from \"./assets/thumbs_down.png\";\nimport ApiClient from \"./services/api-client.js\";\nimport colorMode from \"./components/colorMode.jsx\";\nimport ColorModeSwitch from \"./components/colorModeSwitch\";\nimport spinner from \"./assets/loadingAnimation.gif\";\nimport GameFetch from \"./services/gameFetch.jsx\";\nimport { useEffect } from \"react\";\nimport ApiClient2 from \"./services/api-client2.js\";\nimport GameGrid from \"./components/GameGrid.jsx\";\nimport GenreList from \"./components/GenreList.jsx\";\nimport PlatformSelector from \"./components/PlatformSelector.jsx\";\n\nfunction App() {\n        const [mode, setMode] = useState(true);\n\tconst [selectedGenre, setSelectedGenre] = useState(null);\nreturn (\n  <>\n\t  <div className={colorMode(mode)}>\n\t  \t<div className={styles.nav}>\n\t\t  \t<NavBar />\n\t\t  \t<p className={styles.searchWord}>Search </p>\n\t  \t\t<ColorModeSwitch mode={mode} setMode={setMode}/>\n\t\t  </div>\n\t\t  <div className={styles.aside}>\n\t<GenreList onSelectGenre={(genre) => setSelectedGenre(genre)}/>\n\t</div>\n\t\t  <div className={styles.main}>\n\t  <div></div>\n\t<div>\n\n\t</div>\n\t<div>\n\t<PlatformSelector />\n\t<GameGrid selectedGenre={selectedGenre} />\n        </div>\n\t  </div>\n\t  </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}